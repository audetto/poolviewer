
This is a cross platform driver and viewer application for the Swimovate
Poolmate Pro swimming watch.

The poolmate dongle is actually a TI3410 USB-serial interface.
There is already a kernel driver for the TI3410 - ti_usb_3410_5052 which could
probably be used instead. However trying to get it working just resulted in
failure to download firmware errors, despite pointing it at the right firmware
from the windows driver. Also the linux driver doesn't seem to detect when
there are two configurations (i.e. the firmware is already loaded) and just
select the second without attempting to download.

Therefore.... for now will stick to the simplistic included userspace USB
driver instead although now changed to just dump down the raw data so might
add an option to download from a ttyUSB device instead just incase I get the
serial driver working.

The data protocol is pretty straightforward, the watch just serially dumps a
binary representation of its contents when it's placed onto the dock.



03/2015 Finally merged in changes for Pod A support from Valentio Colosso - 

It adds the support to the virtual ttyUSB serial port for the swimovate Poolmate Pro.
 This file make use of the QtSerialPort module of the Qt Toolkit.

 Tested with Poolmate dongle Pod version A.
  This is a FTDI USB-serial device, wich is managed from ftdi_sio module.
  In my ubuntu 13.10, the module isn't detected, so I had load the module manually using

 sudo modprobe -q ftdi_sio product=0x8b30 vendor=0x0403

 If the pod is detected, module is loaded and you will notice a nice, newly created /dev/ttyUSB0 device.

 After a while, I ended up creating a new file

 /etc/udev/rules.d/99-poolmate.rules

 containing the following lines

 # /etc/udev/rules.d/100-dvb.rules
 SUBSYSTEM=="usb", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="8b30", PROGRAM="/sbin/modprobe -q ftdi_sio product=0x8b30 vendor=0x0403"

 This will do the magic automatically loading the module on pod connection and creating /devttyUSB0.

--

Note the mechanism for adding undetected driver ids for ftdi_sio has changed
you will need to perform the following:

# modprobe ftdi_sio
# echo 0403 8b30 > /sys/bus/usb-serial/drivers/ftdi_sio/new_id
